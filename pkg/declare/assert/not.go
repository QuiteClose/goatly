// Re-implementation of the internal/unless package generated by declare.py
// Each function calling t.Fatalf with an AssertError message if the
// condition is not met.
package assert

import (
	"github.com/quiteclose/goatly/internal/unless"
	"testing"
)

///////////////////////////////////////////////////////////////////////////////

// NotPathExists will call t.Fatalf if the path exists
func NotPathExists(t *testing.T, path string, message string) {
	unless.NotPathExists(path, func(s string) {
		t.Fatalf("AssertError: %s (%s)", s, message)
	})
}

// NotEqual will call t.Fatalf unless a != b
func NotEqual(t *testing.T, a, b interface{}, message string) {
	unless.NotEqual(a, b, func(s string) {
		t.Fatalf("AssertError: %s (%s)", s, message)
	})
}

// NotNil will call t.Fatalf unless a != nil
func NotNil(t *testing.T, a interface{}, message string) {
	unless.NotNil(a, func(s string) {
		t.Fatalf("AssertError: %s (%s)", s, message)
	})
}
